version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    container_name: cinema-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: cinema
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - cinema-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  ex00:
    build:
      context: ./ex00
      dockerfile: Dockerfile
    container_name: cinema-ex00
    ports:
      - "4000:8080"
    environment:
      - DB_URL=jdbc:postgresql://postgres:5432/cinema
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - cinema-network

  ex01:
    build:
      context: ./ex01
      dockerfile: Dockerfile
    container_name: cinema-ex01
    ports:
      - "4001:8080"
    environment:
      - DB_URL=jdbc:postgresql://postgres:5432/cinema
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - STORAGE_PATH=/app/uploads
    volumes:
      - uploads_data:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - cinema-network

networks:
  cinema-network:
    driver: bridge

volumes:
  postgres_data:
  uploads_data:
